@model Factura.Web.Models.InvoiceView
@{
    ViewBag.Title = "AnularFactura";
}

<h2>Esta seguro de eliminiar el registro?</h2>

<div class="panel panel-primary">
  <div class="panel-heading"><h3 class="panel-title">Anulacion de Factura</h3></div>
  <div class="panel-body">
      <dl class="dl-horizontal">
          <dt>
              @Html.DisplayName("Número de Factura")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Invoice.InvoiceNumber)
          </dd>

          <dt>
              @Html.DisplayName("Serie")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Invoice.Serie)
          </dd>

          <dt>
              @Html.DisplayName("Fecha")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Invoice.InvoiceDate)
          </dd>
          <dt>
              @Html.DisplayName("Nombre Cliente")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Customer.FullName)
          </dd>
          <dt>
              @Html.DisplayName("NIT")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Customer.NIT)
          </dd>
          <dt>
              @Html.DisplayName("Direccion")
          </dt>

          <dd>
              @Html.DisplayFor(model => model.Customer.Address)
          </dd>
      </dl>


      <div class="form-horizontal">
          <div class="panel panel-primary">
              <div class="panel-heading"><h3 class="panel-title">Detalle de Productos</h3></div>
              <div class="panel-body">
                  <table class="table table-hover">
                      <tr>
                          <th>
                              @Html.DisplayName("Código Producto")
                          </th>
                          <th>
                              @Html.DisplayName("Nombre")
                          </th>
                          <th>
                              @Html.DisplayName("Descripcion")
                          </th>
                          <th>
                              @Html.DisplayName("Unidad")
                          </th>
                          <th>
                              @Html.DisplayName("Precio")
                          </th>
                          <th>
                              @Html.DisplayName("Cantidad")
                          </th>
                          <th>
                              @Html.DisplayName("Parcial")
                          </th>
                          <th>

                          </th>
                      </tr>

                      @foreach (var item in Model.ProductList)
                      {
                          <tr>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Id)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Name)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Description)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Unit)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Price)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Quantity)
                              </td>
                              <td>
                                  @Html.DisplayFor(modelItem => item.Partial)
                              </td>
                          </tr>
                      }

                  </table>
                  <div class="form-inline col-md-offset-6">

                      <div class="form-group">
                          @Html.Label("Iva", htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-10">
                              @Html.EditorFor(model => model.Invoice.Tax, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                              @Html.ValidationMessageFor(model => model.Invoice.Tax, "", new { @class = "text-danger" })
                          </div>
                      </div>
                      <div class="form-group">
                          @Html.Label("Total", htmlAttributes: new { @class = "control-label col-md-2" })
                          <div class="col-md-10">
                              @Html.EditorFor(model => model.Invoice.Total, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                              @Html.ValidationMessageFor(model => model.Invoice.Total, "", new { @class = "text-danger" })
                          </div>
                      </div>


                  </div>
              </div>
          </div>
      </div>
      @using (Html.BeginForm("AnularFactura", "Factura", FormMethod.Post))
      {
          @Html.AntiForgeryToken()

          <div class="form-actions no-color col-md-offset-10">
              @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-default" }) |
              <input type="submit" value="Confirmar" class="btn btn-danger" />

          </div>
      }

  </div>
</div>